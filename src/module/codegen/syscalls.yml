# TODO(ww): Break this file into codegen/syscalls/<syscall>.yml files?

# Reference: https://filippo.io/linux-syscall-table/

read:
  proto: unsigned int fd, char __user *buf, size_t count
  parms: fd, buf, count
  errors:
    # - EAGAIN
    # - EWOULDBLOCK
    - EBADF
    - EFAULT
    - EINTR
    - EINVAL
    - EIO
    - EISDIR
write:
  proto: unsigned int fd, const char __user *buf, size_t count
  parms: fd, buf, count
  errors:
    - EBADF
    - EDQUOT
    - EFAULT
    - EFBIG
    - EINTR
    - EINVAL
    - ENOSPC
    - EPERM
open:
  proto: const char __user *filename, int flags, umode_t mode
  parms: filename, flags, mode
  errors:
    - EACCES
    - EDQUOT
    # - EEXIST
    - EFAULT
    - EFBIG
    - EINTR
    - EINVAL
    # - EISDIR
    - ELOOP
    - EMFILE
    - ENAMETOOLONG
    - ENFILE
    # - ENODEV
    # - ENOENT
    - ENOMEM
    - ENOSPC
    - ENOTDIR
    # - ENXIO
    - EOVERFLOW
    - EPERM
    - EROFS
    - ETXTBSY
    # - EWOULDBLOCK
    - EBADF
close:
  proto: unsigned int fd
  parms: fd
  errors:
    # - EAGAIN
    # - EWOULDBLOCK
    - EBADF
    - EINTR
    - EIO
    - ENOSPC
    - EDQUOT
    # - EISDIR
stat:
  proto: const char __user *filename, struct __old_kernel_stat __user *statbuf
  parms: filename, statbuf
  errors:
    - EACCES
    - EFAULT
    - ELOOP
    - ENAMETOOLONG
    - ENOENT
    - ENOMEM
    - ENOTDIR
    - EOVERFLOW
fstat:
  proto: unsigned int fd, struct __old_kernel_stat __user *statbuf
  parms: fd, statbuf
  errors:
    - EBADF
    - EFAULT
    - ENOMEM
    - EOVERFLOW
lstat:
  proto: const char __user *filename, struct __old_kernel_stat __user *statbuf
  parms: filename, statbuf
  errors:
    - EACCES
    - EFAULT
    - ELOOP
    - ENAMETOOLONG
    - ENOENT
    - ENOMEM
    - ENOTDIR
    - EOVERFLOW
unlink:
  proto: const char __user *pathname
  parms: pathname
  errors:
    - EACCES
    - EBUSY
    - EFAULT
    # - EIO
    - EISDIR
    - ELOOP
    - ENAMETOOLONG
    - ENOENT
    - ENOMEM
    - ENOTDIR
    - EPERM
    - EROFS
symlink:
  proto: const char __user *oldname, const char __user *newname
  parms: oldname, newname
  errors:
    - EACCES
    - EDQUOT
    - EEXIST
    - EFAULT
    - EIO
    - ELOOP
    - ENAMETOOLONG
    - ENOENT
    - ENOMEM
    - ENOSPC
    - ENOTDIR
    - EPERM
    - EROFS
clone:
  proto: unsigned long clone_flags, unsigned long newsp, int __user *parent_tidptr, int __user *child_tidptr, unsigned long tls
  parms: clone_flags, newsp, parent_tidptr, child_tidptr, tls
  errors:
    - EAGAIN
    - EINVAL
    - ENOMEM
    - ENOSPC
    - EUSERS
    - EPERM
    - ERESTARTNOINTR
fork:
  proto: void
  errors:
    - EAGAIN
    - ENOMEM
    - ENOSYS
    - ERESTARTNOINTR
openat:
  proto: int dfd, const char __user *filename, int flags, umode_t mode
  parms: dfd, filename, flags, mode
  errors:
    - EACCES
    - EDQUOT
    # - EEXIST
    - EFAULT
    - EFBIG
    - EINTR
    - EINVAL
    # - EISDIR
    - ELOOP
    - EMFILE
    - ENAMETOOLONG
    - ENFILE
    # - ENODEV
    # - ENOENT
    - ENOMEM
    - ENOSPC
    - ENOTDIR
    # - ENXIO
    - EOVERFLOW
    - EPERM
    - EROFS
    - ETXTBSY
    # - EWOULDBLOCK
    - EBADF
getcwd:
  proto: char __user *buf, unsigned long size
  parms: buf, size
  errors:
    - EACCES
    - EFAULT
    - EINVAL
    - ENAMETOOLONG
    - ENOENT
    - ENOMEM
    - ERANGE
chdir:
  proto: const char __user *filename
  parms: filename
  errors:
    - EACCES
    - EFAULT
    - EIO
    - ELOOP
    - ENAMETOOLONG
    - ENOENT
    - ENOMEM
    - ENOTDIR
fchdir:
  proto: unsigned int fd
  parms: fd
  errors:
    - EACCES
    - EBADF
